#!/bin/bash
#Wrote by Nicolas Le GuerrouÃ©
src="Utils-latex"

source ${src}/bash/Colors.sh
source ${src}/bash/System.sh
source ${src}/bash/Time.sh
source ${src}/bash/Network.sh
source ${src}/bash/Directories.sh

#Dir
outputDir="Output"
makeDir="Make"
imagesDir="Images"
partsDir="Parts"
settingsDir="Settings"

#Specific files
localBibfilename="localBib.bib"
localHeaderFilename="headerTitle"
#file
main="main.tex"


function checkEnvironment()
{
echo ">>> Checking of directories"
createDirectory ${outputDir}
createDirectory ${makeDir}
createDirectory ${imagesDir}
createDirectory ${partsDir}
createDirectory ${settingsDir}
echo -e ">>> Checking of directories : [$green OK $default]"

echo ">>> Checking of files"

createFile ${settingsDir}/"ChapterAlias.tex" "\setAliasChapter{Section} %Alias of chapters"
createFile ${settingsDir}/"DocumentClass.tex" "\documentclass[11pt]{Utils/utils_report}"
createFile ${settingsDir}/"FHeaderLine.tex" "\setHeaderLine{0.2} %Width of header line\n\setFooterLine{0.2} %Width of footer line"
createFile ${settingsDir}/"Fonts.tex" "\usepackage[sfdefault]{carlito} %Fonts"
createFile ${settingsDir}/"Hyperref.tex" "%Hyperref"
createFile ${settingsDir}/"Includes.tex" "%Includes"
createFile ${settingsDir}/"ListMargin.tex" "\setlength{\leftmargini}{1cm} %Margin of list item"
createFile ${settingsDir}/"LOF.tex" "\displayListOfFigures{Table des Figures} %Display List of Figures"
createFile ${settingsDir}/"Margins.tex" "\geometry{hmargin=2cm,vmargin=2cm} %Margins of file"
createFile ${settingsDir}/"NomenclatureName.tex" "\renewcommand{\nomname}{Nomenclature}" 1
createFile ${settingsDir}/"Theme.tex" "\usepackage[]{fncychap} %Theme of chapter"
createFile ${settingsDir}/"TocDepth.tex" "\setcounter{tocdepth}{0} %Depth of table of content"
createFile ${settingsDir}/"TocSize.tex" "\classicalTableOfContent %Size of table of content" 1
createFile ${settingsDir}/"SectionColor.tex" "\setSectionColor{darkBlue}{0} %Color of section"
createFile ${settingsDir}/"SubSectionColor.tex" "\setSubSectionColor{orange}{0} %Color of subsection"
createFile ${settingsDir}/"TitlePrefix.tex" "\disableSectionPrefix %Status of section prefix \n \disableSubSectionPrefix %Status of subsection prefix"

createFile ${makeDir}/"Alias.tex" "%Set personnal commands here"
createFile ${makeDir}/"Colors.tex" "%Set personnal colors here"
createFile ${makeDir}/"Contacts.tex" "%Set personnal informations to contact author"
createFile ${makeDir}/"Glossaries.tex" "%Set glossaries\n\makenoidxglossaries"
createFile ${makeDir}/"Index.tex" "%Make index \n\makeindex"
createFile ${makeDir}/"Nomenclature.tex" "%Set nomenclature"
createFile ${makeDir}/"Rules.tex" "%Set rules"
createFile ${makeDir}/"Versions.tex" "%Set versions of project"

createFile ${outputDir}/"Bibliography.bib" "%Default bib"


for part in `ls -a $partsDir`
do
    if [[ -d "$partsDir/$part" ]];then #If directory
        found=0
        for subFile in `ls -a $partsDir/$part`
        do
            #echo $subFile
            if [[ "$subFile" == $localHeaderFilename ]];then #If directory
                found=1
            fi
        done
        if [[ $found == 0 ]];then
            echo -e ">>> Creating header file for $partsDir/$part directory : [$green OK $default]"
            createFile $partsDir/$part/$localHeaderFilename "%Default title"
        fi
    fi

done

for part in `ls -a $partsDir`
do
    if [[ -d "$partsDir/$part" ]];then #If directory
        found=0
        for subFile in `ls -a $partsDir/$part`
        do
            #echo $subFile
            if [[ "$subFile" == $localBibfilename ]];then #If directory
                found=1
            fi
        done
        if [[ $found == 0 ]];then
            echo -e ">>> Creating bibliography file for $partsDir/$part directory : [$green OK $default]"
            createFile $partsDir/$part/$localBibfilename "%Default local bib"

        fi
    fi

done

echo -e ">>> Checking of files : [$green OK $default]"




echo ">>> Generating Snippets file"
python3 ${src}/tools/generateSnippets.py
echo -e ">>> Generating Snippets file : [$green OK $default]"

}

if [[ $1 == "extern" ]];then
    checkEnvironment
fi



